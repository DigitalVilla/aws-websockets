service: websockets-test

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  stage: dev
  memorySize: 128
  timeout: 5
  environment:
    TABLE_NAME: ${self:service}-${self:provider.stage}-sockets
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [WebsocketTable, Arn]
    - Effect: Allow
      Action:
        - 'execute-api:ManageConnections'
      Resource:
        - 'arn:aws:execute-api:*:*:**/@connections/*'

functions:
  websocket-connect:
    handler: lambdas/websockets/connect.handler
    events:
      - websocket:
          route: $connect
  websocket-disconnect:
    handler: lambdas/websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  websocket-default:
    handler: lambdas/websockets/default.handler
    events:
      - websocket:
          route: $default
  websocket-message:
    handler: lambdas/websockets/message.handler
    events:
      - websocket:
          route: message

resources:
  Resources:
    WebsocketTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: socketId
            AttributeType: S
        KeySchema:
          - AttributeName: socketId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
